<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="uyun.bat.agent.impl.dao.AgentDao">
	<resultMap type="uyun.bat.agent.api.entity.Agent" id="agentResultMap">
		<id property="id" column="id" jdbcType="BINARY"
			typeHandler="uyun.whale.common.mybatis.type.UUIDTypeHandler" />
		<id property="tenantId" column="tenant_id" jdbcType="BINARY"
			typeHandler="uyun.whale.common.mybatis.type.UUIDTypeHandler" />
		<result property="hostname" column="hostname" />
		<result property="ip" column="ip" />
		<result property="apps" column="apps"
			typeHandler="uyun.bat.common.typehandler.ListStringTypeHandler" />
		<result property="tags" column="tags"
			typeHandler="uyun.bat.common.typehandler.ListStringTypeHandler" />
		<result property="agent_source" column="source" />
		<result property="modified" column="modified" />
		<result property="onlineStatus" column="online_status" />
	</resultMap>

	<resultMap type="uyun.bat.agent.api.entity.AgentTag" id="agentTagResultMap">
		<id property="id" column="id" jdbcType="BINARY"
			typeHandler="uyun.whale.common.mybatis.type.UUIDTypeHandler" />
		<id property="tenantId" column="tenant_id" jdbcType="BINARY"
			typeHandler="uyun.whale.common.mybatis.type.UUIDTypeHandler" />
		<result property="key" column="key" />
		<result property="value" column="value" />
	</resultMap>

	<resultMap type="uyun.bat.agent.impl.entity.AgentTagResult" id="tagResultMap">
		<result property="tags" column="tags" jdbcType="BLOB"
				typeHandler="uyun.bat.agent.impl.entity.ListStringTypeHandler" />
	</resultMap>


	<insert id="save" parameterType="uyun.bat.agent.api.entity.Agent">
		insert into
		agent_list(id,tenant_id,hostname,ip,source,apps,tags,modified,online_status)
		values(#{id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler},
		#{tenantId,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler},
		#{hostname},#{ip},#{agent_source},
		#{apps,typeHandler=uyun.bat.common.typehandler.ListStringTypeHandler},
		#{tags,typeHandler=uyun.bat.common.typehandler.ListStringTypeHandler},
		#{modified},
		#{onlineStatus})
	</insert>

	<update id="update" parameterType="uyun.bat.agent.api.entity.Agent">
		update agent_list  set
		hostname=#{hostname},
		ip= #{ip},
		source = #{agent_source},
		apps=#{apps,typeHandler=uyun.bat.common.typehandler.ListStringTypeHandler},
		tags=#{tags,typeHandler=uyun.bat.common.typehandler.ListStringTypeHandler},
		modified=#{modified},
		online_status=#{onlineStatus}
		where
		id=#{id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
		and
		tenant_id=
		#{tenantId,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
	</update>

	<delete id="delete" parameterType="String">
		delete from agent_list where
		id=#{id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
	</delete>

	<select id="getAgentById"  resultMap="agentResultMap">
		select * from agent_list where
		id=#{id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
		and tenant_id=#{tenantId,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
	</select>

	<select id="queryTags" resultMap="tagResultMap">
		SELECT distinct(CONCAT(at.key,":",at.value)) tags from agent_tag at
		inner join (select * from agent_list where source=#{1}) al on al.id=at.id
		where
		at.tenant_id=#{0,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
	</select>

	<insert id="insertAgentTagBatch" parameterType="list">
		insert into
		agent_tag
		values
		<foreach collection="list" item="item" index="index"
				 separator=",">
			(#{item.id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler},#{item.tenantId,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler},
			#{item.key},#{item.value})
		</foreach>
	</insert>

	<delete id="deleteAgentTagBatch" parameterType="list">
		DELETE FROM agent_tag WHERE id IN
		<foreach collection="list" index="index" item="item" open="("
				 separator="," close=")">
			#{item,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
		</foreach>
	</delete>

	<delete id="deleteAgentTagById" parameterType="String">
		delete from agent_tag where id=#{id,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
	</delete>

	<select id="queryCountByTags" parameterType="uyun.bat.agent.api.entity.AgentQuery" resultType="int">
		select count(*) from(
		select distinct(at.id) from agent_tag at
		inner join agent_list al on at.id = al.id
		<include refid="queryCondition"/>
		<include refid="tagsCondition"/>
		<if test="others">
			union
			select id from agent_list al
			<include refid="queryCondition"/>
			and tags is null
		</if>
		) c
	</select>

	<select id="queryByTags" parameterType="uyun.bat.agent.api.entity.AgentQuery" resultMap="agentResultMap">
		select distinct(al.id),al.tenant_id,al.hostname,al.ip,al.source,al.apps,al.tags,al.modified,al.online_status from agent_tag at
		inner join agent_list al on at.id = al.id
		<include refid="queryCondition"/>
		<include refid="tagsCondition"/>
		<if test="others">
			union
			select * from agent_list al
			<include refid="queryCondition"/>
			and tags is null
		</if>
		limit #{pageNo},#{pageSize}
	</select>

	<sql id="queryCondition">
		where al.tenant_id=#{tenantId,typeHandler=uyun.whale.common.mybatis.type.UUIDTypeHandler}
		and al.source = #{source}
		<if test="searchValue!=null and searchValue!='' ">
			and (
			al.hostname LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
			or al.ip LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
			or al.apps  LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
			)
		</if>
	</sql>

	<sql id="tagsCondition">
		<if test="agentTags.size()>0">
			and(
			<foreach collection="agentTags" item="item" index="index"
					 separator="or">
				(at.key = #{item.key}
				<if test="item.value !=null">
					and value = #{item.value}
				</if>)
			</foreach>
			)
		</if>
	</sql>

</mapper>
