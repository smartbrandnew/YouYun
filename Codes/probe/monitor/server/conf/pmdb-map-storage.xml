<?xml version="1.0" encoding="UTF-8"?>
<pmdb-map>
	<monitor type="IBMDS-STORAGEVOLUME-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="IBMDS-STORAGEVOLUMEGROUP-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="IBMDS-STORAGEPOOL-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="IBMDS-CHASSIS-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="IBMDS-DISKDRIVER-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="IBMDS-STORAGECONTROLLER-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-CLASSIS-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-INTERFACECARDS-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-POWERSUPPLY-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-MAGAZINES-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-DISKDRIVER-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-REPLICATIONGROUPS-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-STORAGEPOOL-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-STORAGEVOLUME-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-FAN-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-STORAGECONTROLLER-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-FCPORT-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="THREEPAR-BETTERY-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<!-- Huawei -->
	<monitor type="HW-ARRAY-INFO">
	<script name="dynamic">
	<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="HW-DISKDRIVER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					
					if (key.equals("attr.storResCode")) {
						lunId = util.getFirstRemoteKeyByLocalKey("raidgroup." + kv.value.split("/")[0]);
						output.localKey = kv.value.split("/")[0] + "-" + kv.value.split("/")[1] ;
						if (lunId != null)
							output.setValue(input, "rs.componentOf", lunId);
					}
					
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="HW-STORAGECONTROLLER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("instance"))
				return;
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
		<object local="node" remote="RAIDController">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
			if (!objectType.equals("node"))
				return;
		
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</object>							
	</monitor>
	<monitor type="HW-STORAGEVOLUME-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					
					if (key.equals("attr.storResCode")) {
						poolId = util.getFirstRemoteKeyByLocalKey("pool." + kv.value.split("/")[0]);
						output.localKey = kv.value ;
						if (poolId != null)
							output.setValue(input, "rs.HasMember", poolId);
					}
					
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>
	</monitor>
	
	<monitor type="HW-STORAGEPOOL-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					
					if (key.equals("attr.storResCode")) {
						output.localKey = "pool." + kv.value;
					}
					
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>	
	</monitor>
	
	<monitor type="HW-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="HW-NETWORKPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="HW-LOGICALDISK-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>

<!-- EMCSymm -->	
			<monitor type="EMCSYMM-ARRAY-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>	
	<monitor type="EMCSYMM-DISKDRIVER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	<monitor type="EMCSYMM-STORAGEVOLUME-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	<monitor type="EMCSYMM-COMPUTERSYSTEM-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
<!-- EMCCelerra -->
<monitor type="EMCCELERRA-ARRAY-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-DISKDRIVER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-CIFSSHARE-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-CIFSSERVER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-NFSSERVER-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-NFSSHARE-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-STORAGEPOOL-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-STORAGEEXTENT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-COMPUTERSYSTEM-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-FILESYSTEM-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCCELERRA-NETWORKPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>

<!-- HDS -->	
	<monitor type="HDS-STORAGEVOLUME-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="HDS-STORAGEPOOL-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="HDS-STORAGESTATISTIC-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
<!-- HPMSA -->
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
	
	<monitor type="EMCSYMM-FCPORT-INFO">
		<script name="dynamic">
		<![CDATA[
			objectType = null;
			for (instance in input.result.rows) {				
				for (kv in instance) {	
					if (kv.key.startsWith("rs.")) {
						objectType = "instance";
						break;
					}					
				}
				if (instance != null)
					break;
			}
			if (objectType == null) {
				if (input.resource != null)
					objectType = "resource";
				else
					objectType = "node"
			}			
				
			ownerId = input.node.id;
			if (input.resource != null)
				ownerId = input.resource.id;				
		
			for (instance in input.result.rows) {				
				cls = instance.getIndicator("class");
				if (cls == null)
					continue;
									
				code = instance.getInstCode();
				name = instance.getInstName(); 
				
				output = context.createOutput("dyna." + ownerId + "." + code, cls);			
				output.setValue(input, "attr.name", name);				
								
				for (kv in instance) {										
					if (kv.value == null)
						continue;
						
					key = kv.key;
					if (key.equals("class")
						|| key.equals("instCode")
						|| key.equals("instName")
						|| key.equals("instExtra")
						|| key.equals("instMonitor"))
						continue;
					else if (key.startsWith("rs.")) {						
						rsId = input.node.id;
						if (input.resource != null && "resource".equals(kv.value))
							rsId = input.resource.id;
						output.setValue(input, key, rsId);
					} else if (key.startsWith("perf.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("state.")) {
						output.setValue(input, key, kv.value);
					} else if (key.startsWith("attr.")) {
						output.setValue(input, key, kv.value);
					} else {
						output.setValue(input, "attr." + key, kv.value);
					}
				}
			}
		]]>
		</script>				
	</monitor>
</pmdb-map>