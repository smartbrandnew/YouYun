<?xml version="1.0" encoding="GBK"?>

<collection-define>
  <cliconfiguration sysname="TRU64 OSF1">
  	<shellInteract>
  		<shellStart>
  			<command cliPrompt=">" output="false">
			  	<![CDATA[
			  		cat << "EOF" > ${remoteFilePath}
			  		#!/bin/sh
					 	if [ "$1" = "check" ];
						then echo ${sequence}
						else 
						${commands}
						fi
			  	]]>
		  	</command>
	  	</shellStart>
	  	<shellEnd>
	  		<command cliPrompt="default" output="false">
			  	<![CDATA[
				  		EOF
				  		chmod +x ${remoteFilePath}
				  	]]>
			  </command>
		  </shellEnd>
		  <shellExec>
			   <command cliPrompt="default" output="true">
			  	<![CDATA[
			  		 LANG=en_US;${remoteFilePath}
				  	]]>
			  </command>
			</shellExec>
  	</shellInteract>
    <category name="disk" sysversion="all" description="tru64 disk">
      <commands>
        <command>df</command>
      </commands>
      <parserRule start="1" end="0" datatype="table" delimeter="\s">
        <parserItem name="blocks" token="1">
          <bsh>"" + Float.parseFloat(blocks)/1024.0</bsh>
        </parserItem>
        <parserItem name="used" token="2">
          <bsh>"" + Float.parseFloat(used)/1024.0</bsh>
        </parserItem>
        <parserItem name="available" token="3">
          <bsh>"" + Float.parseFloat(available)/1024.0</bsh>
        </parserItem>
        <parserItem name="capacity" token="4">
          <bsh>
            if(capacity.endsWith("%")){ capacity = capacity.substring(0, capacity.length()-1); } return capacity;
          </bsh>
        </parserItem>
        <parserItem name="diskname" token="5" />
        <bsh>
          <![CDATA[
          String[] splitter = collectData.split("\n");
          StringBuffer buffer = new StringBuffer();
          for(int index = 0; index < splitter.length; index++){
            String s = splitter[index];
            String[] s1 = s.split("\\s");
            if(s1.length < 6){
              index++;
              if(index < splitter.length){
                buffer.append(s.replaceAll("\\s+"," "));
                buffer.append(splitter[index]);
              }
            }else{
              buffer.append(s);
            }
            buffer.append("\n");
          }
          return buffer.toString();
        ]]>
        </bsh>
      </parserRule>
    </category>

    <category name="ls" sysversion="all" description="tru64 file">
      <commands>
        <command>ls -dl</command>
      </commands>
      <parserRule start="0" end="0" datatype="table" delimeter="\s">
        <bsh>
      	<![CDATA[
      	  import com.broada.carrier.monitor.impl.host.cli.file.CLIFileExecutor;
      	  import com.broada.carrier.monitor.impl.host.cli.file.CLIFileMonitorCondition;
      	  
      	  String[] lines = collectData.split("\n");
      	  List result = new ArrayList();		
		  for(int index = 0; index < lines.length; index++){
			CLIFileMonitorCondition row = CLIFileExecutor.parseFileline(lines[index]);
			if (row != null)
			  result.add(row);
		  }
		  return result;
      	]]>
		</bsh>      
      </parserRule>
    </category>

    <category name="totalmemory" sysversion="all" description="tru64 totalmemory">
      <commands>
        <command output="false">
          total=`vmstat -P | grep "Total Physical Memory" |head -1 |awk '{print $5}'`;
        </command>
        <command>echo $total;</command>
      </commands>
      <parserRule start="0" end="0" delimeter="\s" datatype="property">
        <parserItem name="totalMemory" line="0" token="0" />
      </parserRule>
    </category>
    
    <category name="io" sysversion="all" description="tru64 device io">
      <commands>
        <command>
          sar -d 10 1
        </command>
      </commands>
      <parserRule start="0" end="0" delimeter="\s" datatype="table">
        <parserItem name="device" token="0" />
        <parserItem name="busy" token="1" />
        <parserItem name="avque" token="2" />
        <parserItem name="r+w/s" token="3" />
        <parserItem name="blks/s" token="4" />
        <parserItem name="avwait" token="5" />
        <parserItem name="avserv" token="6" />
         <bsh>
	      <![CDATA[
	      	int pos = collectData.indexOf("avserv");
	      	collectData = collectData.substring(pos + 6).trim();
	      	pos = collectData.indexOf(" ");
	      	if(pos == -1)
	      	  return "";
	      	return collectData.substring(pos).trim();
	      ]]>
	     </bsh>
      </parserRule>
    </category>

    <category name="hostinfo" sysversion="all" description="tru64 hostinfo">
      <commands>
        <command output="false">
      tmpnum=$$;
      a=`psrinfo -v |grep "Status of processor" |wc -l`
		  b=`uname -n`
		  c=`uname -r`
		  d=`uname -m`
		  e=`unknown`
		  f=`vmstat -P | grep "Total Physical Memory" |head -1 |awk '{print $5}'`;
		  top -d1 -f /tmp/broada.processes.out.$tmpnum;
		  g=`cat /tmp/broada.processes.out.$tmpnum | grep processes: | awk '{print $1}'`;
		  rm -f /tmp/broada.processes.out.$tmpnum;
        </command>
        <command>echo $a $d $b $c $f $g $e</command>
      </commands>
      <parserRule start="0" end="0" delimeter="\s" datatype="property">
        <parserItem line="0" token="0" name="processorCount"/>
        <parserItem line="0" token="1" name="machineType"/>
        <parserItem line="0" token="2" name="systemName"/>
        <parserItem line="0" token="3" name="systemVersion"/>
        <parserItem line="0" token="4" name="memorySize"/>
        <parserItem line="0" token="5" name="processCount"/>
      </parserRule>
    </category>
    
    <category name="memory" sysversion="all" description="tru64 memory">
      <commands>
        <command output="false">
          <![CDATA[
				tmpnum=$$;
				top -n 5 -d 1 > /tmp/broada.memory.txt.$tmpnum;
				total=`vmstat -P | grep "Total Physical Memory" |head -1 |awk '{print $5}'`;
				free=`grep 'Memory:' /tmp/broada.memory.txt.$tmpnum | awk '{print $9;}' | awk '{FS="M";print $1}'`;
				real=`expr $total \- $free`;
				realuseutil=`expr $real \* 100 \/ $total`;
				SWAPINFO=`grep 'Memory:' /tmp/broada.memory.txt.$tmpnum | awk '{print $6;}'`;
				virused=`echo $SWAPINFO | awk '{FS="M/";print $1}'`;
				pgsp_total=`echo $SWAPINFO | awk '{FS="M/";print $2}' | awk '{FS="M";print $1}'`;
				virutil=`expr $virused  \* 100 \/ $pgsp_total`;
				rm -f /tmp/broada.memory.txt.$tmpnum;
				]]>
        </command>

        <command>echo $real $realuseutil $virused $virutil;</command>
      </commands>

      <parserRule start="0" end="0" delimeter="\s" datatype="property">

        <parserItem line="0" token="0" name="real" />
        <parserItem line="0" token="1" name="realuseutil" />
        <parserItem line="0" token="2" name="virtualused"/>
        <parserItem line="0" token="3" name="virtualutil" />
      </parserRule>
    </category>
    <category name="cpu" sysversion="all" description="tru64 cpu">
      <commands>
        <command>vmstat 1 3</command>
      </commands>

      <parserRule start="3" end="0" delimeter="\s" datatype="property">
        <parserItem line="3" token="15" name="user" />
        <parserItem line="3" token="16" name="sys" />
      </parserRule>
    </category>
    <category name="process" sysversion="all" description="tru64 process">
      <commands>
        <command output="false">
          <![CDATA[
				tmpnum=$$;
				top -s 1 -d 1 -n 1000 > /tmp/broada.process.out.$tmpnum;
				]]>
        </command>
        <command>cat /tmp/broada.process.out.$tmpnum;</command>
        <command output="false" delay="1000">rm -f /tmp/broada.process.out.$tmpnum;</command>
      </commands>

      <parserRule start="8" end="0" delimeter="\s" datatype="table">
        <parserItem token="9" name="command" />
        <parserItem token="8" name="cpu">
          <bsh>
            <![CDATA[
				    if(cpu.endsWith("%")){
				      cpu = cpu.substring(0, cpu.length()-1)) ;
				    }
						return cpu;
					]]>
          </bsh>
        </parserItem>
        <parserItem token="5" name="memory">
          <bsh>
            import java.text.DecimalFormat;
						DecimalFormat format = new DecimalFormat("#0.00");
						if (memory.endsWith("M") || memory.endsWith("m")) {
					      memory = format.format(Float.parseFloat(memory.substring(0, memory.length() - 1)));
					    } else if (memory.endsWith("G") || memory.endsWith("g")) {
					      memory = format.format(Float.parseFloat(memory.substring(0, memory.length() - 1)) * 1024.0);
					    } else {
					      memory = format.format(Float.parseFloat(memory) / 1024.0);
					    }
						return memory;
          </bsh>
        </parserItem>
        <parserItem token="6" name="status" />
      </parserRule>
    </category>
    <category name="sysversion" sysversion="all" description="tru64 version">
      <commands>
        <command>uname -a</command>
      </commands>
      <parserRule start="0" end="0" delimeter="\s" datatype="property">
        <parserItem line="0" token="0" name="os" />
        <parserItem line="0" token="2" name="sysversion" />
      </parserRule>
    </category>
    
        <category name="userinfo" sysversion="all" description="tru64 current login users">
      <commands>
        <command>who -HR</command>
      </commands>
      <parserRule start="1" end="0" delimeter="\s" datatype="table">
        <parserItem line="0" token="0" name="user" />
        <parserItem line="0" token="1" name="tty" />
        <parserItem start="24" end="36" name="logintime" />
        <parserItem line="0" token="2" name="loginfrom"/>
      </parserRule>
   </category>
    
   <category name="hisuserinfo" sysversion="all" description="tru64 login users's history">
      <commands>
        <command>last -R</command>
      </commands>
      <parserRule start="0" end="0" delimeter="\s" datatype="table">
        <parserItem line="0" token="0" name="user" />
        <parserItem line="0" token="1" name="tty" />
        <parserItem start="39" end="-1" name="logintime" />
        <parserItem line="0" token="2" name="loginfrom"/>	
        <bsh>
          <![CDATA[
          String[] files = collectData.split("\n");
          String result = "";
          for(int index = 0; index < files.length; index++){
            String file = files[index];
            if(!file.startsWith("wtmp begins")){
              if(result.length() > 0)
                result += "\n";
              result += file;
            }
          }
          return result.trim();
        ]]>
        </bsh>   
      </parserRule>
   </category>
    
   <category name="useraccounts" sysversion="all" description="tru64 user accounts">
      <commands>
        <command>cat /etc/passwd</command>
      </commands>
      <parserRule start="0" end="0" delimeter=":" datatype="table">
        <parserItem line="0" token="0" name="user" />
        <parserItem line="0" token="1" name="passwd"/>
        <parserItem line="0" token="2" name="uid" />
        <parserItem line="0" token="3" name="gid"/>
        <parserItem line="0" token="4" name="comment"/>
        <parserItem line="0" token="5" name="home"/>        
      </parserRule>
   </category>
   
   <category name="cd" sysversion="all" description="tru64 directory">
	  <commands>
	    <command> 
	       <![CDATA[
               stty -echo;
               LANG=en_US;ls -dl
      		]]> 
      	</command>
	  </commands>
	  <parserRule start="0" end="0" datatype="table" delimeter="\s">
				 <parserItem token="1" name="linkedcnt"/>
				 <parserItem token="2" name="user"/>
				 <parserItem token="3" name="group"/>
				 <parserItem token="8" name="filepath">
          <bsh>
            <![CDATA[
					if(!filepath.startsWith("/")){
						int pos = filepath.indexOf("/");
						if(pos > -1) filepath = filepath.substring(pos);
					}
					if(filepath.indexOf("->") != -1){
						filepath = filepath.substring(0, filepath.indexOf("->")).trim();
					}
					return filepath;
				]]>
          </bsh>
        </parserItem>
				<parserItem name="mmonth" token="5"/>
				<parserItem name="mday" token="6"/>
				<parserItem name="mother" token="7"/>
        <parserItem name="size" token="4">
          <bsh>
            <![CDATA[
					import java.text.DecimalFormat;
					DecimalFormat format = new DecimalFormat("#0.00");
					format.format(Float.parseFloat(size)/(1024*1024));
					]]>
          </bsh>
        </parserItem>
        <bsh>
          <![CDATA[
          if(collectData.trim().endsWith("not found")){
             collectData = "";
          }
          return collectData;
				]]>
        </bsh>
			</parserRule>
		</category>
    
  </cliconfiguration>
</collection-define>
